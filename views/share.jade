extends layout
block content
  -for(var i=1; i<=7; i++){
    style.
      #hex#{i} { background: #{colors[i]}; }
      #hex#{i}:after{ border-color: #{colors[i]} transparent;}
      #hex#{i}:before{ border-color: #{colors[i]} transparent;}
  -}
  #joinGame.content
    .card
      .item.item-divider Share URL or Code
      .item.item-text-wrap
        .item.item-input-inset
          label.item-input-wrapper
            input#copyCode(style="width: 100%;padding-left: 0px;padding-top: 1px;" type="text", value=domain_url+"/join/"+code)
          button#copyBtn.button.button-small.button-calm Copy
    .card
      .item.item-divider Players in the room 1 of #{num_players}
      .item.item-text-wrap
        ul#players.list
  #game.content(style="display: none;")
    .clearfix
      .content-hex
        .top
          a#hex1.hexagon(onClick="inputGame(1)")
          a#hex2.hexagon(onClick="inputGame(2)")
        .bottom
          a#hex3.hexagon(onClick="inputGame(3)")
          a#hex4.hexagon(onClick="inputGame(4)")
          a#hex5.hexagon(onClick="inputGame(5)")
        .top
          a#hex6.hexagon(onClick="inputGame(6)")
          a#hex7.hexagon(onClick="inputGame(7)")
    .card
      pre#gameInfo

  #bar.bar.bar-footer.bar-dark(style="display: none;")
    .title Can you remember the colors?

  script.
    $( "#copyBtn" ).on( "click", function() {
      $('#copyCode').select();
      document.execCommand('copy'); // or 'cut'
    });

  script.
    var socket = io.connect(window.location.host);
                // black  // green  // yellow // blue   // pulpure // aqua    // red    // gray
    var colors = ['#000000','#28a54c','#ffc900','#ffc900','#6b46e5' ,'#0a9dc7' ,'#e42112','#686868'];
    var youTrun = false;

    function inputGame(value){
      socket.emit('inputGame',{gameCode: '#{code}',input:value,playerID : '#{player.id}'});
      /*if(youTrun){
        socket.emit('inputGame',{gameCode: '#{code}',input:value,playerID : '#{player.id}'});
      }else{
        barClassTilte('bar-energized',"This isn't your trun.");
      }*/
    }
    function barClassTilte(addClass,addTilte){
      var barHtml = $('#bar');
        barHtml.removeClass('bar-dark bar-balanced bar-energized').addClass(addClass);
        addTilte && $('#bar .title').text(addTilte);
      return barHtml
    }

    socket.emit('joinPlayer',{gameCode: "#{code}" , playerID : '#{player.id}'});
    socket.on('joinPlayer', function (data) {
      $('#players').empty();
      for(var i=0; i<data.players.length;i++){
        $('#players').append('<li class="item">'+data.players[i].nickname+'</li>')
      }
    });
    socket.on('gotoGame',function(data){
      $('#gameInfo').text(JSON.stringify(data.game,1,' '));
      $('#joinGame').hide();
      $('#game').show();
      $('#bar').show();
    });

    socket.on('background',function(data){
      setTimeout(function() {
        $('body').css("background-color", colors[data.colorNum] || 'rgb(231, 231, 231)');
      },250);
      $('body').css("background-color", 'rgb(231, 231, 231)');
      barClassTilte('bar-dark','Can you remember the colors?');
    });

    socket.on('youTrun',function(data){
      youTrun = data.value;
      barClassTilte( (youTrun && 'bar-balanced') || 'bar-dark', (youTrun && 'Tu Turno') || 'Otro jugador' );
    });

    socket.on('winOrLost',function(data){
      youTrun = data.value;
      barClassTilte( (data.value && 'bar-positive') || 'bar-assertive' , (data.value && 'Winner, You passed level '+data.level) || 'Loser' );
    });
